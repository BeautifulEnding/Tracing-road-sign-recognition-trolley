// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="hls_line,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7s15ftgb196-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=11.000000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=0,HLS_SYN_DSP=3,HLS_SYN_FF=1754,HLS_SYN_LUT=2734,HLS_VERSION=2018_2}" *)

module hls_line (
        src_axi_TDATA,
        src_axi_TKEEP,
        src_axi_TSTRB,
        src_axi_TUSER,
        src_axi_TLAST,
        src_axi_TID,
        src_axi_TDEST,
        rows,
        cols,
        ap_clk,
        ap_rst_n,
        src_axi_TVALID,
        src_axi_TREADY,
        ap_return,
        ap_done,
        ap_start,
        ap_ready,
        ap_idle
);


input  [23:0] src_axi_TDATA;
input  [2:0] src_axi_TKEEP;
input  [2:0] src_axi_TSTRB;
input  [0:0] src_axi_TUSER;
input  [0:0] src_axi_TLAST;
input  [0:0] src_axi_TID;
input  [0:0] src_axi_TDEST;
input  [31:0] rows;
input  [31:0] cols;
input   ap_clk;
input   ap_rst_n;
input   src_axi_TVALID;
output   src_axi_TREADY;
output  [31:0] ap_return;
output   ap_done;
input   ap_start;
output   ap_ready;
output   ap_idle;

 reg    ap_rst_n_inv;
wire    Block_Mat_exit5_proc_U0_ap_start;
wire    Block_Mat_exit5_proc_U0_ap_done;
wire    Block_Mat_exit5_proc_U0_ap_continue;
wire    Block_Mat_exit5_proc_U0_ap_idle;
wire    Block_Mat_exit5_proc_U0_ap_ready;
wire   [31:0] Block_Mat_exit5_proc_U0_img_01_rows_V_out_din;
wire    Block_Mat_exit5_proc_U0_img_01_rows_V_out_write;
wire   [31:0] Block_Mat_exit5_proc_U0_img_01_cols_V_out_din;
wire    Block_Mat_exit5_proc_U0_img_01_cols_V_out_write;
wire    AXIvideo2Mat_U0_ap_start;
wire    AXIvideo2Mat_U0_ap_done;
wire    AXIvideo2Mat_U0_ap_continue;
wire    AXIvideo2Mat_U0_ap_idle;
wire    AXIvideo2Mat_U0_ap_ready;
wire    AXIvideo2Mat_U0_start_out;
wire    AXIvideo2Mat_U0_start_write;
wire    AXIvideo2Mat_U0_src_axi_TREADY;
wire    AXIvideo2Mat_U0_img_rows_V_read;
wire    AXIvideo2Mat_U0_img_cols_V_read;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_0_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_0_V_write;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_1_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_1_V_write;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_2_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_2_V_write;
wire   [31:0] AXIvideo2Mat_U0_img_rows_V_out_din;
wire    AXIvideo2Mat_U0_img_rows_V_out_write;
wire   [31:0] AXIvideo2Mat_U0_img_cols_V_out_din;
wire    AXIvideo2Mat_U0_img_cols_V_out_write;
wire    CvtColor_U0_ap_start;
wire    CvtColor_U0_ap_done;
wire    CvtColor_U0_ap_continue;
wire    CvtColor_U0_ap_idle;
wire    CvtColor_U0_ap_ready;
wire    CvtColor_U0_start_out;
wire    CvtColor_U0_start_write;
wire    CvtColor_U0_p_src_rows_V_read;
wire    CvtColor_U0_p_src_cols_V_read;
wire    CvtColor_U0_p_src_data_stream_0_V_read;
wire    CvtColor_U0_p_src_data_stream_1_V_read;
wire    CvtColor_U0_p_src_data_stream_2_V_read;
wire   [7:0] CvtColor_U0_p_dst_data_stream_V_din;
wire    CvtColor_U0_p_dst_data_stream_V_write;
wire    gray2bin_U0_ap_start;
wire    gray2bin_U0_ap_done;
wire    gray2bin_U0_ap_continue;
wire    gray2bin_U0_ap_idle;
wire    gray2bin_U0_ap_ready;
wire    gray2bin_U0_p_src_data_stream_V_read;
wire   [31:0] gray2bin_U0_ap_return;
wire    ap_channel_done_output;
wire    output_full_n;
wire    Block_Mat_exit59_pro_U0_ap_start;
wire    Block_Mat_exit59_pro_U0_ap_done;
wire    Block_Mat_exit59_pro_U0_ap_continue;
wire    Block_Mat_exit59_pro_U0_ap_idle;
wire    Block_Mat_exit59_pro_U0_ap_ready;
wire   [31:0] Block_Mat_exit59_pro_U0_ap_return;
wire    ap_channel_done_output_load_loc_chan;
wire    output_load_loc_chan_full_n;
wire    p_line_stream_line_c_U0_ap_start;
wire    p_line_stream_line_c_U0_ap_done;
wire    p_line_stream_line_c_U0_ap_continue;
wire    p_line_stream_line_c_U0_ap_idle;
wire    p_line_stream_line_c_U0_ap_ready;
wire   [31:0] p_line_stream_line_c_U0_ap_return;
wire   [31:0] tmp_p_line_stream_line_c_fu_296_ap_return;
wire    ap_sync_continue;
wire    img_01_rows_V_c_full_n;
wire   [31:0] img_01_rows_V_c_dout;
wire    img_01_rows_V_c_empty_n;
wire    img_01_cols_V_c_full_n;
wire   [31:0] img_01_cols_V_c_dout;
wire    img_01_cols_V_c_empty_n;
wire    img_01_data_stream_0_full_n;
wire   [7:0] img_01_data_stream_0_dout;
wire    img_01_data_stream_0_empty_n;
wire    img_01_data_stream_1_full_n;
wire   [7:0] img_01_data_stream_1_dout;
wire    img_01_data_stream_1_empty_n;
wire    img_01_data_stream_2_full_n;
wire   [7:0] img_01_data_stream_2_dout;
wire    img_01_data_stream_2_empty_n;
wire    img_01_rows_V_c14_full_n;
wire   [31:0] img_01_rows_V_c14_dout;
wire    img_01_rows_V_c14_empty_n;
wire    img_01_cols_V_c15_full_n;
wire   [31:0] img_01_cols_V_c15_dout;
wire    img_01_cols_V_c15_empty_n;
wire    img1_data_stream_0_s_full_n;
wire   [7:0] img1_data_stream_0_s_dout;
wire    img1_data_stream_0_s_empty_n;
wire   [31:0] output_dout;
wire    output_empty_n;
wire   [31:0] output_load_loc_chan_dout;
wire    output_load_loc_chan_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_AXIvideo2Mat_U0_ap_ready;
wire    ap_sync_AXIvideo2Mat_U0_ap_ready;
reg   [1:0] AXIvideo2Mat_U0_ap_ready_count;
reg    ap_sync_reg_Block_Mat_exit5_proc_U0_ap_ready;
wire    ap_sync_Block_Mat_exit5_proc_U0_ap_ready;
reg   [1:0] Block_Mat_exit5_proc_U0_ap_ready_count;
wire    Block_Mat_exit5_proc_U0_start_full_n;
wire    Block_Mat_exit5_proc_U0_start_write;
wire   [0:0] start_for_CvtColor_U0_din;
wire    start_for_CvtColor_U0_full_n;
wire   [0:0] start_for_CvtColor_U0_dout;
wire    start_for_CvtColor_U0_empty_n;
wire   [0:0] start_for_gray2bin_U0_din;
wire    start_for_gray2bin_U0_full_n;
wire   [0:0] start_for_gray2bin_U0_dout;
wire    start_for_gray2bin_U0_empty_n;
wire    gray2bin_U0_start_full_n;
wire    gray2bin_U0_start_write;
wire    Block_Mat_exit59_pro_U0_start_full_n;
wire    Block_Mat_exit59_pro_U0_start_write;
wire    p_line_stream_line_c_U0_start_full_n;
wire    p_line_stream_line_c_U0_start_write;

// power-on initialization
initial begin
#0 ap_sync_reg_AXIvideo2Mat_U0_ap_ready = 1'b0;
#0 AXIvideo2Mat_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_Block_Mat_exit5_proc_U0_ap_ready = 1'b0;
#0 Block_Mat_exit5_proc_U0_ap_ready_count = 2'd0;
end

Block_Mat_exit5_proc Block_Mat_exit5_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_Mat_exit5_proc_U0_ap_start),
    .ap_done(Block_Mat_exit5_proc_U0_ap_done),
    .ap_continue(Block_Mat_exit5_proc_U0_ap_continue),
    .ap_idle(Block_Mat_exit5_proc_U0_ap_idle),
    .ap_ready(Block_Mat_exit5_proc_U0_ap_ready),
    .rows(rows),
    .cols(cols),
    .img_01_rows_V_out_din(Block_Mat_exit5_proc_U0_img_01_rows_V_out_din),
    .img_01_rows_V_out_full_n(img_01_rows_V_c_full_n),
    .img_01_rows_V_out_write(Block_Mat_exit5_proc_U0_img_01_rows_V_out_write),
    .img_01_cols_V_out_din(Block_Mat_exit5_proc_U0_img_01_cols_V_out_din),
    .img_01_cols_V_out_full_n(img_01_cols_V_c_full_n),
    .img_01_cols_V_out_write(Block_Mat_exit5_proc_U0_img_01_cols_V_out_write)
);

AXIvideo2Mat AXIvideo2Mat_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(AXIvideo2Mat_U0_ap_start),
    .start_full_n(start_for_CvtColor_U0_full_n),
    .ap_done(AXIvideo2Mat_U0_ap_done),
    .ap_continue(AXIvideo2Mat_U0_ap_continue),
    .ap_idle(AXIvideo2Mat_U0_ap_idle),
    .ap_ready(AXIvideo2Mat_U0_ap_ready),
    .start_out(AXIvideo2Mat_U0_start_out),
    .start_write(AXIvideo2Mat_U0_start_write),
    .src_axi_TDATA(src_axi_TDATA),
    .src_axi_TVALID(src_axi_TVALID),
    .src_axi_TREADY(AXIvideo2Mat_U0_src_axi_TREADY),
    .src_axi_TKEEP(src_axi_TKEEP),
    .src_axi_TSTRB(src_axi_TSTRB),
    .src_axi_TUSER(src_axi_TUSER),
    .src_axi_TLAST(src_axi_TLAST),
    .src_axi_TID(src_axi_TID),
    .src_axi_TDEST(src_axi_TDEST),
    .img_rows_V_dout(img_01_rows_V_c_dout),
    .img_rows_V_empty_n(img_01_rows_V_c_empty_n),
    .img_rows_V_read(AXIvideo2Mat_U0_img_rows_V_read),
    .img_cols_V_dout(img_01_cols_V_c_dout),
    .img_cols_V_empty_n(img_01_cols_V_c_empty_n),
    .img_cols_V_read(AXIvideo2Mat_U0_img_cols_V_read),
    .img_data_stream_0_V_din(AXIvideo2Mat_U0_img_data_stream_0_V_din),
    .img_data_stream_0_V_full_n(img_01_data_stream_0_full_n),
    .img_data_stream_0_V_write(AXIvideo2Mat_U0_img_data_stream_0_V_write),
    .img_data_stream_1_V_din(AXIvideo2Mat_U0_img_data_stream_1_V_din),
    .img_data_stream_1_V_full_n(img_01_data_stream_1_full_n),
    .img_data_stream_1_V_write(AXIvideo2Mat_U0_img_data_stream_1_V_write),
    .img_data_stream_2_V_din(AXIvideo2Mat_U0_img_data_stream_2_V_din),
    .img_data_stream_2_V_full_n(img_01_data_stream_2_full_n),
    .img_data_stream_2_V_write(AXIvideo2Mat_U0_img_data_stream_2_V_write),
    .img_rows_V_out_din(AXIvideo2Mat_U0_img_rows_V_out_din),
    .img_rows_V_out_full_n(img_01_rows_V_c14_full_n),
    .img_rows_V_out_write(AXIvideo2Mat_U0_img_rows_V_out_write),
    .img_cols_V_out_din(AXIvideo2Mat_U0_img_cols_V_out_din),
    .img_cols_V_out_full_n(img_01_cols_V_c15_full_n),
    .img_cols_V_out_write(AXIvideo2Mat_U0_img_cols_V_out_write)
);

CvtColor CvtColor_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(CvtColor_U0_ap_start),
    .start_full_n(start_for_gray2bin_U0_full_n),
    .ap_done(CvtColor_U0_ap_done),
    .ap_continue(CvtColor_U0_ap_continue),
    .ap_idle(CvtColor_U0_ap_idle),
    .ap_ready(CvtColor_U0_ap_ready),
    .start_out(CvtColor_U0_start_out),
    .start_write(CvtColor_U0_start_write),
    .p_src_rows_V_dout(img_01_rows_V_c14_dout),
    .p_src_rows_V_empty_n(img_01_rows_V_c14_empty_n),
    .p_src_rows_V_read(CvtColor_U0_p_src_rows_V_read),
    .p_src_cols_V_dout(img_01_cols_V_c15_dout),
    .p_src_cols_V_empty_n(img_01_cols_V_c15_empty_n),
    .p_src_cols_V_read(CvtColor_U0_p_src_cols_V_read),
    .p_src_data_stream_0_V_dout(img_01_data_stream_0_dout),
    .p_src_data_stream_0_V_empty_n(img_01_data_stream_0_empty_n),
    .p_src_data_stream_0_V_read(CvtColor_U0_p_src_data_stream_0_V_read),
    .p_src_data_stream_1_V_dout(img_01_data_stream_1_dout),
    .p_src_data_stream_1_V_empty_n(img_01_data_stream_1_empty_n),
    .p_src_data_stream_1_V_read(CvtColor_U0_p_src_data_stream_1_V_read),
    .p_src_data_stream_2_V_dout(img_01_data_stream_2_dout),
    .p_src_data_stream_2_V_empty_n(img_01_data_stream_2_empty_n),
    .p_src_data_stream_2_V_read(CvtColor_U0_p_src_data_stream_2_V_read),
    .p_dst_data_stream_V_din(CvtColor_U0_p_dst_data_stream_V_din),
    .p_dst_data_stream_V_full_n(img1_data_stream_0_s_full_n),
    .p_dst_data_stream_V_write(CvtColor_U0_p_dst_data_stream_V_write)
);

gray2bin gray2bin_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(gray2bin_U0_ap_start),
    .ap_done(gray2bin_U0_ap_done),
    .ap_continue(gray2bin_U0_ap_continue),
    .ap_idle(gray2bin_U0_ap_idle),
    .ap_ready(gray2bin_U0_ap_ready),
    .p_src_data_stream_V_dout(img1_data_stream_0_s_dout),
    .p_src_data_stream_V_empty_n(img1_data_stream_0_s_empty_n),
    .p_src_data_stream_V_read(gray2bin_U0_p_src_data_stream_V_read),
    .ap_return(gray2bin_U0_ap_return)
);

Block_Mat_exit59_pro Block_Mat_exit59_pro_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_Mat_exit59_pro_U0_ap_start),
    .ap_done(Block_Mat_exit59_pro_U0_ap_done),
    .ap_continue(Block_Mat_exit59_pro_U0_ap_continue),
    .ap_idle(Block_Mat_exit59_pro_U0_ap_idle),
    .ap_ready(Block_Mat_exit59_pro_U0_ap_ready),
    .p_read(output_dout),
    .ap_return(Block_Mat_exit59_pro_U0_ap_return)
);

p_line_stream_line_c p_line_stream_line_c_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(p_line_stream_line_c_U0_ap_start),
    .ap_done(p_line_stream_line_c_U0_ap_done),
    .ap_continue(p_line_stream_line_c_U0_ap_continue),
    .ap_idle(p_line_stream_line_c_U0_ap_idle),
    .ap_ready(p_line_stream_line_c_U0_ap_ready),
    .p_read(output_load_loc_chan_dout),
    .ap_return(p_line_stream_line_c_U0_ap_return)
);

fifo_w32_d2_A img_01_rows_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit5_proc_U0_img_01_rows_V_out_din),
    .if_full_n(img_01_rows_V_c_full_n),
    .if_write(Block_Mat_exit5_proc_U0_img_01_rows_V_out_write),
    .if_dout(img_01_rows_V_c_dout),
    .if_empty_n(img_01_rows_V_c_empty_n),
    .if_read(AXIvideo2Mat_U0_img_rows_V_read)
);

fifo_w32_d2_A img_01_cols_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit5_proc_U0_img_01_cols_V_out_din),
    .if_full_n(img_01_cols_V_c_full_n),
    .if_write(Block_Mat_exit5_proc_U0_img_01_cols_V_out_write),
    .if_dout(img_01_cols_V_c_dout),
    .if_empty_n(img_01_cols_V_c_empty_n),
    .if_read(AXIvideo2Mat_U0_img_cols_V_read)
);

fifo_w8_d2_A img_01_data_stream_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_0_V_din),
    .if_full_n(img_01_data_stream_0_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_0_V_write),
    .if_dout(img_01_data_stream_0_dout),
    .if_empty_n(img_01_data_stream_0_empty_n),
    .if_read(CvtColor_U0_p_src_data_stream_0_V_read)
);

fifo_w8_d2_A img_01_data_stream_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_1_V_din),
    .if_full_n(img_01_data_stream_1_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_1_V_write),
    .if_dout(img_01_data_stream_1_dout),
    .if_empty_n(img_01_data_stream_1_empty_n),
    .if_read(CvtColor_U0_p_src_data_stream_1_V_read)
);

fifo_w8_d2_A img_01_data_stream_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_2_V_din),
    .if_full_n(img_01_data_stream_2_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_2_V_write),
    .if_dout(img_01_data_stream_2_dout),
    .if_empty_n(img_01_data_stream_2_empty_n),
    .if_read(CvtColor_U0_p_src_data_stream_2_V_read)
);

fifo_w32_d2_A img_01_rows_V_c14_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_rows_V_out_din),
    .if_full_n(img_01_rows_V_c14_full_n),
    .if_write(AXIvideo2Mat_U0_img_rows_V_out_write),
    .if_dout(img_01_rows_V_c14_dout),
    .if_empty_n(img_01_rows_V_c14_empty_n),
    .if_read(CvtColor_U0_p_src_rows_V_read)
);

fifo_w32_d2_A img_01_cols_V_c15_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_cols_V_out_din),
    .if_full_n(img_01_cols_V_c15_full_n),
    .if_write(AXIvideo2Mat_U0_img_cols_V_out_write),
    .if_dout(img_01_cols_V_c15_dout),
    .if_empty_n(img_01_cols_V_c15_empty_n),
    .if_read(CvtColor_U0_p_src_cols_V_read)
);

fifo_w8_d2_A img1_data_stream_0_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(CvtColor_U0_p_dst_data_stream_V_din),
    .if_full_n(img1_data_stream_0_s_full_n),
    .if_write(CvtColor_U0_p_dst_data_stream_V_write),
    .if_dout(img1_data_stream_0_s_dout),
    .if_empty_n(img1_data_stream_0_s_empty_n),
    .if_read(gray2bin_U0_p_src_data_stream_V_read)
);

fifo_w32_d2_A output_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(gray2bin_U0_ap_return),
    .if_full_n(output_full_n),
    .if_write(gray2bin_U0_ap_done),
    .if_dout(output_dout),
    .if_empty_n(output_empty_n),
    .if_read(Block_Mat_exit59_pro_U0_ap_ready)
);

fifo_w32_d2_A output_load_loc_chan_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit59_pro_U0_ap_return),
    .if_full_n(output_load_loc_chan_full_n),
    .if_write(Block_Mat_exit59_pro_U0_ap_done),
    .if_dout(output_load_loc_chan_dout),
    .if_empty_n(output_load_loc_chan_empty_n),
    .if_read(p_line_stream_line_c_U0_ap_ready)
);

start_for_CvtColofYi start_for_CvtColofYi_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_CvtColor_U0_din),
    .if_full_n(start_for_CvtColor_U0_full_n),
    .if_write(AXIvideo2Mat_U0_start_write),
    .if_dout(start_for_CvtColor_U0_dout),
    .if_empty_n(start_for_CvtColor_U0_empty_n),
    .if_read(CvtColor_U0_ap_ready)
);

start_for_gray2big8j start_for_gray2big8j_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_gray2bin_U0_din),
    .if_full_n(start_for_gray2bin_U0_full_n),
    .if_write(CvtColor_U0_start_write),
    .if_dout(start_for_gray2bin_U0_dout),
    .if_empty_n(start_for_gray2bin_U0_empty_n),
    .if_read(gray2bin_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= ap_sync_AXIvideo2Mat_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Block_Mat_exit5_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Block_Mat_exit5_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Block_Mat_exit5_proc_U0_ap_ready <= ap_sync_Block_Mat_exit5_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == AXIvideo2Mat_U0_ap_ready) & (ap_sync_ready == 1'b1))) begin
        AXIvideo2Mat_U0_ap_ready_count <= (AXIvideo2Mat_U0_ap_ready_count - 2'd1);
    end else if (((1'b1 == AXIvideo2Mat_U0_ap_ready) & (ap_sync_ready == 1'b0))) begin
        AXIvideo2Mat_U0_ap_ready_count <= (AXIvideo2Mat_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sync_ready == 1'b1) & (1'b0 == Block_Mat_exit5_proc_U0_ap_ready))) begin
        Block_Mat_exit5_proc_U0_ap_ready_count <= (Block_Mat_exit5_proc_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == Block_Mat_exit5_proc_U0_ap_ready))) begin
        Block_Mat_exit5_proc_U0_ap_ready_count <= (Block_Mat_exit5_proc_U0_ap_ready_count + 2'd1);
    end
end

assign AXIvideo2Mat_U0_ap_continue = 1'b1;

assign AXIvideo2Mat_U0_ap_start = ((ap_sync_reg_AXIvideo2Mat_U0_ap_ready ^ 1'b1) & ap_start);

assign Block_Mat_exit59_pro_U0_ap_continue = output_load_loc_chan_full_n;

assign Block_Mat_exit59_pro_U0_ap_start = output_empty_n;

assign Block_Mat_exit59_pro_U0_start_full_n = 1'b1;

assign Block_Mat_exit59_pro_U0_start_write = 1'b0;

assign Block_Mat_exit5_proc_U0_ap_continue = 1'b1;

assign Block_Mat_exit5_proc_U0_ap_start = ((ap_sync_reg_Block_Mat_exit5_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign Block_Mat_exit5_proc_U0_start_full_n = 1'b1;

assign Block_Mat_exit5_proc_U0_start_write = 1'b0;

assign CvtColor_U0_ap_continue = 1'b1;

assign CvtColor_U0_ap_start = start_for_CvtColor_U0_empty_n;

assign ap_channel_done_output = gray2bin_U0_ap_done;

assign ap_channel_done_output_load_loc_chan = Block_Mat_exit59_pro_U0_ap_done;

assign ap_done = p_line_stream_line_c_U0_ap_done;

assign ap_idle = (p_line_stream_line_c_U0_ap_idle & gray2bin_U0_ap_idle & (output_load_loc_chan_empty_n ^ 1'b1) & (output_empty_n ^ 1'b1) & CvtColor_U0_ap_idle & Block_Mat_exit5_proc_U0_ap_idle & Block_Mat_exit59_pro_U0_ap_idle & AXIvideo2Mat_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_return = p_line_stream_line_c_U0_ap_return;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_AXIvideo2Mat_U0_ap_ready = (ap_sync_reg_AXIvideo2Mat_U0_ap_ready | AXIvideo2Mat_U0_ap_ready);

assign ap_sync_Block_Mat_exit5_proc_U0_ap_ready = (ap_sync_reg_Block_Mat_exit5_proc_U0_ap_ready | Block_Mat_exit5_proc_U0_ap_ready);

assign ap_sync_continue = 1'b1;

assign ap_sync_done = p_line_stream_line_c_U0_ap_done;

assign ap_sync_ready = (ap_sync_Block_Mat_exit5_proc_U0_ap_ready & ap_sync_AXIvideo2Mat_U0_ap_ready);

assign gray2bin_U0_ap_continue = output_full_n;

assign gray2bin_U0_ap_start = start_for_gray2bin_U0_empty_n;

assign gray2bin_U0_start_full_n = 1'b1;

assign gray2bin_U0_start_write = 1'b0;

assign p_line_stream_line_c_U0_ap_continue = 1'b1;

assign p_line_stream_line_c_U0_ap_start = output_load_loc_chan_empty_n;

assign p_line_stream_line_c_U0_start_full_n = 1'b1;

assign p_line_stream_line_c_U0_start_write = 1'b0;

assign src_axi_TREADY = AXIvideo2Mat_U0_src_axi_TREADY;

assign start_for_CvtColor_U0_din = 1'b1;

assign start_for_gray2bin_U0_din = 1'b1;

assign tmp_p_line_stream_line_c_fu_296_ap_return = 32'd0;

endmodule //hls_line
