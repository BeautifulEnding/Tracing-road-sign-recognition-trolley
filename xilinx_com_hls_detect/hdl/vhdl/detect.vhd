-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity detect is
port (
    src_axi_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    src_axi_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
    src_axi_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
    src_axi_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    src_axi_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    src_axi_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    src_axi_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    rows : IN STD_LOGIC_VECTOR (31 downto 0);
    cols : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    src_axi_TVALID : IN STD_LOGIC;
    src_axi_TREADY : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_done : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of detect is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "detect,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7s15ftgb196-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=11.000000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=0,HLS_SYN_DSP=3,HLS_SYN_FF=873,HLS_SYN_LUT=2049,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal Block_Mat_exit6_proc_U0_ap_start : STD_LOGIC;
    signal Block_Mat_exit6_proc_U0_ap_done : STD_LOGIC;
    signal Block_Mat_exit6_proc_U0_ap_continue : STD_LOGIC;
    signal Block_Mat_exit6_proc_U0_ap_idle : STD_LOGIC;
    signal Block_Mat_exit6_proc_U0_ap_ready : STD_LOGIC;
    signal Block_Mat_exit6_proc_U0_img_01_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit6_proc_U0_img_01_rows_V_out_write : STD_LOGIC;
    signal Block_Mat_exit6_proc_U0_img_01_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit6_proc_U0_img_01_cols_V_out_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_start : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_done : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_continue : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_idle : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_ready : STD_LOGIC;
    signal AXIvideo2Mat_U0_start_out : STD_LOGIC;
    signal AXIvideo2Mat_U0_start_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_src_axi_TREADY : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_rows_V_read : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_cols_V_read : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal AXIvideo2Mat_U0_img_data_stream_0_V_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal AXIvideo2Mat_U0_img_data_stream_1_V_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal AXIvideo2Mat_U0_img_data_stream_2_V_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal AXIvideo2Mat_U0_img_rows_V_out_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal AXIvideo2Mat_U0_img_cols_V_out_write : STD_LOGIC;
    signal CvtColor_U0_ap_start : STD_LOGIC;
    signal CvtColor_U0_ap_done : STD_LOGIC;
    signal CvtColor_U0_ap_continue : STD_LOGIC;
    signal CvtColor_U0_ap_idle : STD_LOGIC;
    signal CvtColor_U0_ap_ready : STD_LOGIC;
    signal CvtColor_U0_start_out : STD_LOGIC;
    signal CvtColor_U0_start_write : STD_LOGIC;
    signal CvtColor_U0_p_src_rows_V_read : STD_LOGIC;
    signal CvtColor_U0_p_src_cols_V_read : STD_LOGIC;
    signal CvtColor_U0_p_src_data_stream_0_V_read : STD_LOGIC;
    signal CvtColor_U0_p_src_data_stream_1_V_read : STD_LOGIC;
    signal CvtColor_U0_p_src_data_stream_2_V_read : STD_LOGIC;
    signal CvtColor_U0_p_dst_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal CvtColor_U0_p_dst_data_stream_V_write : STD_LOGIC;
    signal segment_U0_ap_start : STD_LOGIC;
    signal segment_U0_ap_done : STD_LOGIC;
    signal segment_U0_ap_continue : STD_LOGIC;
    signal segment_U0_ap_idle : STD_LOGIC;
    signal segment_U0_ap_ready : STD_LOGIC;
    signal segment_U0_p_src_data_stream_V_read : STD_LOGIC;
    signal segment_U0_ap_return : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_channel_done_output : STD_LOGIC;
    signal output_full_n : STD_LOGIC;
    signal Block_Mat_exit610_pr_U0_ap_start : STD_LOGIC;
    signal Block_Mat_exit610_pr_U0_ap_done : STD_LOGIC;
    signal Block_Mat_exit610_pr_U0_ap_continue : STD_LOGIC;
    signal Block_Mat_exit610_pr_U0_ap_idle : STD_LOGIC;
    signal Block_Mat_exit610_pr_U0_ap_ready : STD_LOGIC;
    signal Block_Mat_exit610_pr_U0_ap_return : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_channel_done_extLd_loc_channel : STD_LOGIC;
    signal extLd_loc_channel_full_n : STD_LOGIC;
    signal p_detectRoadSign_det_U0_ap_start : STD_LOGIC;
    signal p_detectRoadSign_det_U0_ap_done : STD_LOGIC;
    signal p_detectRoadSign_det_U0_ap_continue : STD_LOGIC;
    signal p_detectRoadSign_det_U0_ap_idle : STD_LOGIC;
    signal p_detectRoadSign_det_U0_ap_ready : STD_LOGIC;
    signal p_detectRoadSign_det_U0_ap_return : STD_LOGIC_VECTOR (30 downto 0);
    signal p_trunc_ext_fu_302_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sync_continue : STD_LOGIC;
    signal img_01_rows_V_c_full_n : STD_LOGIC;
    signal img_01_rows_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal img_01_rows_V_c_empty_n : STD_LOGIC;
    signal img_01_cols_V_c_full_n : STD_LOGIC;
    signal img_01_cols_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal img_01_cols_V_c_empty_n : STD_LOGIC;
    signal img_01_data_stream_0_full_n : STD_LOGIC;
    signal img_01_data_stream_0_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_01_data_stream_0_empty_n : STD_LOGIC;
    signal img_01_data_stream_1_full_n : STD_LOGIC;
    signal img_01_data_stream_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_01_data_stream_1_empty_n : STD_LOGIC;
    signal img_01_data_stream_2_full_n : STD_LOGIC;
    signal img_01_data_stream_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img_01_data_stream_2_empty_n : STD_LOGIC;
    signal img_01_rows_V_c15_full_n : STD_LOGIC;
    signal img_01_rows_V_c15_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal img_01_rows_V_c15_empty_n : STD_LOGIC;
    signal img_01_cols_V_c16_full_n : STD_LOGIC;
    signal img_01_cols_V_c16_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal img_01_cols_V_c16_empty_n : STD_LOGIC;
    signal img1_data_stream_0_s_full_n : STD_LOGIC;
    signal img1_data_stream_0_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal img1_data_stream_0_s_empty_n : STD_LOGIC;
    signal output_dout : STD_LOGIC_VECTOR (30 downto 0);
    signal output_empty_n : STD_LOGIC;
    signal extLd_loc_channel_dout : STD_LOGIC_VECTOR (30 downto 0);
    signal extLd_loc_channel_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_AXIvideo2Mat_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_AXIvideo2Mat_U0_ap_ready : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_Block_Mat_exit6_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_Block_Mat_exit6_proc_U0_ap_ready : STD_LOGIC;
    signal Block_Mat_exit6_proc_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal Block_Mat_exit6_proc_U0_start_full_n : STD_LOGIC;
    signal Block_Mat_exit6_proc_U0_start_write : STD_LOGIC;
    signal start_for_CvtColor_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_CvtColor_U0_full_n : STD_LOGIC;
    signal start_for_CvtColor_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_CvtColor_U0_empty_n : STD_LOGIC;
    signal start_for_segment_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_segment_U0_full_n : STD_LOGIC;
    signal start_for_segment_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_segment_U0_empty_n : STD_LOGIC;
    signal segment_U0_start_full_n : STD_LOGIC;
    signal segment_U0_start_write : STD_LOGIC;
    signal Block_Mat_exit610_pr_U0_start_full_n : STD_LOGIC;
    signal Block_Mat_exit610_pr_U0_start_write : STD_LOGIC;
    signal p_detectRoadSign_det_U0_start_full_n : STD_LOGIC;
    signal p_detectRoadSign_det_U0_start_write : STD_LOGIC;

    component Block_Mat_exit6_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        rows : IN STD_LOGIC_VECTOR (31 downto 0);
        cols : IN STD_LOGIC_VECTOR (31 downto 0);
        img_01_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        img_01_rows_V_out_full_n : IN STD_LOGIC;
        img_01_rows_V_out_write : OUT STD_LOGIC;
        img_01_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        img_01_cols_V_out_full_n : IN STD_LOGIC;
        img_01_cols_V_out_write : OUT STD_LOGIC );
    end component;


    component AXIvideo2Mat IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        src_axi_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
        src_axi_TVALID : IN STD_LOGIC;
        src_axi_TREADY : OUT STD_LOGIC;
        src_axi_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
        src_axi_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
        src_axi_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        src_axi_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        src_axi_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        src_axi_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        img_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        img_rows_V_empty_n : IN STD_LOGIC;
        img_rows_V_read : OUT STD_LOGIC;
        img_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        img_cols_V_empty_n : IN STD_LOGIC;
        img_cols_V_read : OUT STD_LOGIC;
        img_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_0_V_full_n : IN STD_LOGIC;
        img_data_stream_0_V_write : OUT STD_LOGIC;
        img_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_1_V_full_n : IN STD_LOGIC;
        img_data_stream_1_V_write : OUT STD_LOGIC;
        img_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_2_V_full_n : IN STD_LOGIC;
        img_data_stream_2_V_write : OUT STD_LOGIC;
        img_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        img_rows_V_out_full_n : IN STD_LOGIC;
        img_rows_V_out_write : OUT STD_LOGIC;
        img_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        img_cols_V_out_full_n : IN STD_LOGIC;
        img_cols_V_out_write : OUT STD_LOGIC );
    end component;


    component CvtColor IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        p_src_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_rows_V_empty_n : IN STD_LOGIC;
        p_src_rows_V_read : OUT STD_LOGIC;
        p_src_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        p_src_cols_V_empty_n : IN STD_LOGIC;
        p_src_cols_V_read : OUT STD_LOGIC;
        p_src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_0_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_0_V_read : OUT STD_LOGIC;
        p_src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_1_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_1_V_read : OUT STD_LOGIC;
        p_src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_2_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_2_V_read : OUT STD_LOGIC;
        p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_V_write : OUT STD_LOGIC );
    end component;


    component segment IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_V_read : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component Block_Mat_exit610_pr IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (30 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component p_detectRoadSign_det IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        extLd_loc_channel : IN STD_LOGIC_VECTOR (30 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component fifo_w32_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w8_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w31_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (30 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (30 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_CvtColoeOg IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_segmentfYi IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    Block_Mat_exit6_proc_U0 : component Block_Mat_exit6_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_Mat_exit6_proc_U0_ap_start,
        ap_done => Block_Mat_exit6_proc_U0_ap_done,
        ap_continue => Block_Mat_exit6_proc_U0_ap_continue,
        ap_idle => Block_Mat_exit6_proc_U0_ap_idle,
        ap_ready => Block_Mat_exit6_proc_U0_ap_ready,
        rows => rows,
        cols => cols,
        img_01_rows_V_out_din => Block_Mat_exit6_proc_U0_img_01_rows_V_out_din,
        img_01_rows_V_out_full_n => img_01_rows_V_c_full_n,
        img_01_rows_V_out_write => Block_Mat_exit6_proc_U0_img_01_rows_V_out_write,
        img_01_cols_V_out_din => Block_Mat_exit6_proc_U0_img_01_cols_V_out_din,
        img_01_cols_V_out_full_n => img_01_cols_V_c_full_n,
        img_01_cols_V_out_write => Block_Mat_exit6_proc_U0_img_01_cols_V_out_write);

    AXIvideo2Mat_U0 : component AXIvideo2Mat
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => AXIvideo2Mat_U0_ap_start,
        start_full_n => start_for_CvtColor_U0_full_n,
        ap_done => AXIvideo2Mat_U0_ap_done,
        ap_continue => AXIvideo2Mat_U0_ap_continue,
        ap_idle => AXIvideo2Mat_U0_ap_idle,
        ap_ready => AXIvideo2Mat_U0_ap_ready,
        start_out => AXIvideo2Mat_U0_start_out,
        start_write => AXIvideo2Mat_U0_start_write,
        src_axi_TDATA => src_axi_TDATA,
        src_axi_TVALID => src_axi_TVALID,
        src_axi_TREADY => AXIvideo2Mat_U0_src_axi_TREADY,
        src_axi_TKEEP => src_axi_TKEEP,
        src_axi_TSTRB => src_axi_TSTRB,
        src_axi_TUSER => src_axi_TUSER,
        src_axi_TLAST => src_axi_TLAST,
        src_axi_TID => src_axi_TID,
        src_axi_TDEST => src_axi_TDEST,
        img_rows_V_dout => img_01_rows_V_c_dout,
        img_rows_V_empty_n => img_01_rows_V_c_empty_n,
        img_rows_V_read => AXIvideo2Mat_U0_img_rows_V_read,
        img_cols_V_dout => img_01_cols_V_c_dout,
        img_cols_V_empty_n => img_01_cols_V_c_empty_n,
        img_cols_V_read => AXIvideo2Mat_U0_img_cols_V_read,
        img_data_stream_0_V_din => AXIvideo2Mat_U0_img_data_stream_0_V_din,
        img_data_stream_0_V_full_n => img_01_data_stream_0_full_n,
        img_data_stream_0_V_write => AXIvideo2Mat_U0_img_data_stream_0_V_write,
        img_data_stream_1_V_din => AXIvideo2Mat_U0_img_data_stream_1_V_din,
        img_data_stream_1_V_full_n => img_01_data_stream_1_full_n,
        img_data_stream_1_V_write => AXIvideo2Mat_U0_img_data_stream_1_V_write,
        img_data_stream_2_V_din => AXIvideo2Mat_U0_img_data_stream_2_V_din,
        img_data_stream_2_V_full_n => img_01_data_stream_2_full_n,
        img_data_stream_2_V_write => AXIvideo2Mat_U0_img_data_stream_2_V_write,
        img_rows_V_out_din => AXIvideo2Mat_U0_img_rows_V_out_din,
        img_rows_V_out_full_n => img_01_rows_V_c15_full_n,
        img_rows_V_out_write => AXIvideo2Mat_U0_img_rows_V_out_write,
        img_cols_V_out_din => AXIvideo2Mat_U0_img_cols_V_out_din,
        img_cols_V_out_full_n => img_01_cols_V_c16_full_n,
        img_cols_V_out_write => AXIvideo2Mat_U0_img_cols_V_out_write);

    CvtColor_U0 : component CvtColor
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => CvtColor_U0_ap_start,
        start_full_n => start_for_segment_U0_full_n,
        ap_done => CvtColor_U0_ap_done,
        ap_continue => CvtColor_U0_ap_continue,
        ap_idle => CvtColor_U0_ap_idle,
        ap_ready => CvtColor_U0_ap_ready,
        start_out => CvtColor_U0_start_out,
        start_write => CvtColor_U0_start_write,
        p_src_rows_V_dout => img_01_rows_V_c15_dout,
        p_src_rows_V_empty_n => img_01_rows_V_c15_empty_n,
        p_src_rows_V_read => CvtColor_U0_p_src_rows_V_read,
        p_src_cols_V_dout => img_01_cols_V_c16_dout,
        p_src_cols_V_empty_n => img_01_cols_V_c16_empty_n,
        p_src_cols_V_read => CvtColor_U0_p_src_cols_V_read,
        p_src_data_stream_0_V_dout => img_01_data_stream_0_dout,
        p_src_data_stream_0_V_empty_n => img_01_data_stream_0_empty_n,
        p_src_data_stream_0_V_read => CvtColor_U0_p_src_data_stream_0_V_read,
        p_src_data_stream_1_V_dout => img_01_data_stream_1_dout,
        p_src_data_stream_1_V_empty_n => img_01_data_stream_1_empty_n,
        p_src_data_stream_1_V_read => CvtColor_U0_p_src_data_stream_1_V_read,
        p_src_data_stream_2_V_dout => img_01_data_stream_2_dout,
        p_src_data_stream_2_V_empty_n => img_01_data_stream_2_empty_n,
        p_src_data_stream_2_V_read => CvtColor_U0_p_src_data_stream_2_V_read,
        p_dst_data_stream_V_din => CvtColor_U0_p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n => img1_data_stream_0_s_full_n,
        p_dst_data_stream_V_write => CvtColor_U0_p_dst_data_stream_V_write);

    segment_U0 : component segment
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => segment_U0_ap_start,
        ap_done => segment_U0_ap_done,
        ap_continue => segment_U0_ap_continue,
        ap_idle => segment_U0_ap_idle,
        ap_ready => segment_U0_ap_ready,
        p_src_data_stream_V_dout => img1_data_stream_0_s_dout,
        p_src_data_stream_V_empty_n => img1_data_stream_0_s_empty_n,
        p_src_data_stream_V_read => segment_U0_p_src_data_stream_V_read,
        ap_return => segment_U0_ap_return);

    Block_Mat_exit610_pr_U0 : component Block_Mat_exit610_pr
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_Mat_exit610_pr_U0_ap_start,
        ap_done => Block_Mat_exit610_pr_U0_ap_done,
        ap_continue => Block_Mat_exit610_pr_U0_ap_continue,
        ap_idle => Block_Mat_exit610_pr_U0_ap_idle,
        ap_ready => Block_Mat_exit610_pr_U0_ap_ready,
        p_read => output_dout,
        ap_return => Block_Mat_exit610_pr_U0_ap_return);

    p_detectRoadSign_det_U0 : component p_detectRoadSign_det
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => p_detectRoadSign_det_U0_ap_start,
        ap_done => p_detectRoadSign_det_U0_ap_done,
        ap_continue => p_detectRoadSign_det_U0_ap_continue,
        ap_idle => p_detectRoadSign_det_U0_ap_idle,
        ap_ready => p_detectRoadSign_det_U0_ap_ready,
        extLd_loc_channel => extLd_loc_channel_dout,
        ap_return => p_detectRoadSign_det_U0_ap_return);

    img_01_rows_V_c_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit6_proc_U0_img_01_rows_V_out_din,
        if_full_n => img_01_rows_V_c_full_n,
        if_write => Block_Mat_exit6_proc_U0_img_01_rows_V_out_write,
        if_dout => img_01_rows_V_c_dout,
        if_empty_n => img_01_rows_V_c_empty_n,
        if_read => AXIvideo2Mat_U0_img_rows_V_read);

    img_01_cols_V_c_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit6_proc_U0_img_01_cols_V_out_din,
        if_full_n => img_01_cols_V_c_full_n,
        if_write => Block_Mat_exit6_proc_U0_img_01_cols_V_out_write,
        if_dout => img_01_cols_V_c_dout,
        if_empty_n => img_01_cols_V_c_empty_n,
        if_read => AXIvideo2Mat_U0_img_cols_V_read);

    img_01_data_stream_0_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_data_stream_0_V_din,
        if_full_n => img_01_data_stream_0_full_n,
        if_write => AXIvideo2Mat_U0_img_data_stream_0_V_write,
        if_dout => img_01_data_stream_0_dout,
        if_empty_n => img_01_data_stream_0_empty_n,
        if_read => CvtColor_U0_p_src_data_stream_0_V_read);

    img_01_data_stream_1_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_data_stream_1_V_din,
        if_full_n => img_01_data_stream_1_full_n,
        if_write => AXIvideo2Mat_U0_img_data_stream_1_V_write,
        if_dout => img_01_data_stream_1_dout,
        if_empty_n => img_01_data_stream_1_empty_n,
        if_read => CvtColor_U0_p_src_data_stream_1_V_read);

    img_01_data_stream_2_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_data_stream_2_V_din,
        if_full_n => img_01_data_stream_2_full_n,
        if_write => AXIvideo2Mat_U0_img_data_stream_2_V_write,
        if_dout => img_01_data_stream_2_dout,
        if_empty_n => img_01_data_stream_2_empty_n,
        if_read => CvtColor_U0_p_src_data_stream_2_V_read);

    img_01_rows_V_c15_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_rows_V_out_din,
        if_full_n => img_01_rows_V_c15_full_n,
        if_write => AXIvideo2Mat_U0_img_rows_V_out_write,
        if_dout => img_01_rows_V_c15_dout,
        if_empty_n => img_01_rows_V_c15_empty_n,
        if_read => CvtColor_U0_p_src_rows_V_read);

    img_01_cols_V_c16_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_cols_V_out_din,
        if_full_n => img_01_cols_V_c16_full_n,
        if_write => AXIvideo2Mat_U0_img_cols_V_out_write,
        if_dout => img_01_cols_V_c16_dout,
        if_empty_n => img_01_cols_V_c16_empty_n,
        if_read => CvtColor_U0_p_src_cols_V_read);

    img1_data_stream_0_s_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => CvtColor_U0_p_dst_data_stream_V_din,
        if_full_n => img1_data_stream_0_s_full_n,
        if_write => CvtColor_U0_p_dst_data_stream_V_write,
        if_dout => img1_data_stream_0_s_dout,
        if_empty_n => img1_data_stream_0_s_empty_n,
        if_read => segment_U0_p_src_data_stream_V_read);

    output_U : component fifo_w31_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => segment_U0_ap_return,
        if_full_n => output_full_n,
        if_write => segment_U0_ap_done,
        if_dout => output_dout,
        if_empty_n => output_empty_n,
        if_read => Block_Mat_exit610_pr_U0_ap_ready);

    extLd_loc_channel_U : component fifo_w31_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit610_pr_U0_ap_return,
        if_full_n => extLd_loc_channel_full_n,
        if_write => Block_Mat_exit610_pr_U0_ap_done,
        if_dout => extLd_loc_channel_dout,
        if_empty_n => extLd_loc_channel_empty_n,
        if_read => p_detectRoadSign_det_U0_ap_ready);

    start_for_CvtColoeOg_U : component start_for_CvtColoeOg
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_CvtColor_U0_din,
        if_full_n => start_for_CvtColor_U0_full_n,
        if_write => AXIvideo2Mat_U0_start_write,
        if_dout => start_for_CvtColor_U0_dout,
        if_empty_n => start_for_CvtColor_U0_empty_n,
        if_read => CvtColor_U0_ap_ready);

    start_for_segmentfYi_U : component start_for_segmentfYi
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_segment_U0_din,
        if_full_n => start_for_segment_U0_full_n,
        if_write => CvtColor_U0_start_write,
        if_dout => start_for_segment_U0_dout,
        if_empty_n => start_for_segment_U0_empty_n,
        if_read => segment_U0_ap_ready);





    ap_sync_reg_AXIvideo2Mat_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= ap_sync_AXIvideo2Mat_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_Block_Mat_exit6_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_Block_Mat_exit6_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_Block_Mat_exit6_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_Block_Mat_exit6_proc_U0_ap_ready <= ap_sync_Block_Mat_exit6_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    AXIvideo2Mat_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_0 = AXIvideo2Mat_U0_ap_ready) and (ap_sync_ready = ap_const_logic_1))) then 
                AXIvideo2Mat_U0_ap_ready_count <= std_logic_vector(unsigned(AXIvideo2Mat_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_const_logic_1 = AXIvideo2Mat_U0_ap_ready) and (ap_sync_ready = ap_const_logic_0))) then 
                AXIvideo2Mat_U0_ap_ready_count <= std_logic_vector(unsigned(AXIvideo2Mat_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    Block_Mat_exit6_proc_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sync_ready = ap_const_logic_1) and (ap_const_logic_0 = Block_Mat_exit6_proc_U0_ap_ready))) then 
                Block_Mat_exit6_proc_U0_ap_ready_count <= std_logic_vector(unsigned(Block_Mat_exit6_proc_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_sync_ready = ap_const_logic_0) and (ap_const_logic_1 = Block_Mat_exit6_proc_U0_ap_ready))) then 
                Block_Mat_exit6_proc_U0_ap_ready_count <= std_logic_vector(unsigned(Block_Mat_exit6_proc_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;
    AXIvideo2Mat_U0_ap_continue <= ap_const_logic_1;
    AXIvideo2Mat_U0_ap_start <= ((ap_sync_reg_AXIvideo2Mat_U0_ap_ready xor ap_const_logic_1) and ap_start);
    Block_Mat_exit610_pr_U0_ap_continue <= extLd_loc_channel_full_n;
    Block_Mat_exit610_pr_U0_ap_start <= output_empty_n;
    Block_Mat_exit610_pr_U0_start_full_n <= ap_const_logic_1;
    Block_Mat_exit610_pr_U0_start_write <= ap_const_logic_0;
    Block_Mat_exit6_proc_U0_ap_continue <= ap_const_logic_1;
    Block_Mat_exit6_proc_U0_ap_start <= ((ap_sync_reg_Block_Mat_exit6_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    Block_Mat_exit6_proc_U0_start_full_n <= ap_const_logic_1;
    Block_Mat_exit6_proc_U0_start_write <= ap_const_logic_0;
    CvtColor_U0_ap_continue <= ap_const_logic_1;
    CvtColor_U0_ap_start <= start_for_CvtColor_U0_empty_n;
    ap_channel_done_extLd_loc_channel <= Block_Mat_exit610_pr_U0_ap_done;
    ap_channel_done_output <= segment_U0_ap_done;
    ap_done <= p_detectRoadSign_det_U0_ap_done;
    ap_idle <= (segment_U0_ap_idle and p_detectRoadSign_det_U0_ap_idle and (extLd_loc_channel_empty_n xor ap_const_logic_1) and (output_empty_n xor ap_const_logic_1) and CvtColor_U0_ap_idle and Block_Mat_exit6_proc_U0_ap_idle and Block_Mat_exit610_pr_U0_ap_idle and AXIvideo2Mat_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_return <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_detectRoadSign_det_U0_ap_return),32));

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_AXIvideo2Mat_U0_ap_ready <= (ap_sync_reg_AXIvideo2Mat_U0_ap_ready or AXIvideo2Mat_U0_ap_ready);
    ap_sync_Block_Mat_exit6_proc_U0_ap_ready <= (ap_sync_reg_Block_Mat_exit6_proc_U0_ap_ready or Block_Mat_exit6_proc_U0_ap_ready);
    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= p_detectRoadSign_det_U0_ap_done;
    ap_sync_ready <= (ap_sync_Block_Mat_exit6_proc_U0_ap_ready and ap_sync_AXIvideo2Mat_U0_ap_ready);
    p_detectRoadSign_det_U0_ap_continue <= ap_const_logic_1;
    p_detectRoadSign_det_U0_ap_start <= extLd_loc_channel_empty_n;
    p_detectRoadSign_det_U0_start_full_n <= ap_const_logic_1;
    p_detectRoadSign_det_U0_start_write <= ap_const_logic_0;
    p_trunc_ext_fu_302_p1 <= ap_const_lv32_0;
    segment_U0_ap_continue <= output_full_n;
    segment_U0_ap_start <= start_for_segment_U0_empty_n;
    segment_U0_start_full_n <= ap_const_logic_1;
    segment_U0_start_write <= ap_const_logic_0;
    src_axi_TREADY <= AXIvideo2Mat_U0_src_axi_TREADY;
    start_for_CvtColor_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_segment_U0_din <= (0=>ap_const_logic_1, others=>'-');
end behav;
